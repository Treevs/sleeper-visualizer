{"version":3,"sources":["User.js","App.js","reportWebVitals.js","index.js"],"names":["User","props","useState","pointsScored","setPointsScored","useEffect","points","weeklyPointsScored","user","i","week","toFixed","calculatePointsScoredAfter","teamName","userName","axios","require","App","mappedUsers","setMappedUsers","setWeek","getUsersAndRosters","leagueId","a","get","users","rosters","data","getMatchups","matchups","matchup","push","mapUsers","userId","user_id","rosterId","find","roster","owner_id","roster_id","userObj","display_name","metadata","team_name","length","console","log","className","type","value","onChange","target","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cada03e9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\n\r\nfunction User(props) {\r\n    const [pointsScored, setPointsScored] = useState(0)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // const calculatePointsScored = () => {\r\n        //     let points = 0;\r\n        //     const weeklyPointsScored = props.user.weeklyPointsScored;\r\n        //     // console.log(\"weeklyPointsScored\", weeklyPointsScored)\r\n        //     for (let i=0; i<props.week; i++) {\r\n        //         // console.log(\"Week\", weeklyPointsScored[i])\r\n        //         points += weeklyPointsScored[i]\r\n        //         setPointsScored(points.toFixed(2));\r\n        //     }\r\n        // }\r\n        const calculatePointsScoredAfter = () => {\r\n            let points = 0;\r\n            const weeklyPointsScored = props.user.weeklyPointsScored;\r\n            // console.log(\"weeklyPointsScored\", weeklyPointsScored)\r\n            for (let i=props.week; i<18; i++) {\r\n                // console.log(\"Week\", weeklyPointsScored[i])\r\n                points += weeklyPointsScored[i]\r\n                setPointsScored(points.toFixed(2));\r\n            }\r\n        }\r\n        calculatePointsScoredAfter();\r\n    }, [props])\r\n    return (\r\n        <div>\r\n            <div>{props.user.teamName} (@{props.user.userName}) {pointsScored} points</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport User from \"./User\";\nconst axios = require('axios');\n// const store = require('store');\n\n\n\nfunction App() {\n\n  const [mappedUsers, setMappedUsers] = useState([]);\n  const [week, setWeek] = useState(0);\n\n  const handleWeekChange = (week) => {\n    setWeek(week.target.value)\n  }\n  const getUsersAndRosters = async (leagueId) => {\n    const users = await axios.get(`https://api.sleeper.app/v1/league/${leagueId}/users`);\n    const rosters = await axios.get(`https://api.sleeper.app/v1/league/${leagueId}/rosters`);\n    return {users: users.data, rosters: rosters.data};\n  }\n\n  const getMatchups = async (leagueId) => {\n    const matchups = []\n    for(let i = 1; i<=18; i++) {\n      const matchup = await axios.get(`https://api.sleeper.app/v1/league/${leagueId}/matchups/${i}`);\n      matchups.push(matchup.data);\n    }\n    return matchups;\n  }\n\n  const mapUsers = ({users, rosters, matchups}) => {\n    const mappedUsers = [];\n    for (const user of users) {\n      const userId = user.user_id;\n      const weeklyPointsScored = [];\n      const roster = rosters.find((roster) => {\n        return roster.owner_id === userId;\n      })\n      const rosterId = roster.roster_id\n      const userObj = {\n        userId,\n        userName: user?.display_name,\n        teamName: user?.metadata?.team_name,\n        weeklyPointsScored,\n        rosterId\n      }\n      //Roster IDs start at 1\n      mappedUsers[rosterId-1] = userObj;\n\n    }\n\n    for (const week of matchups) {\n      for (let i=0; i<mappedUsers.length; i++) {\n        mappedUsers[i].weeklyPointsScored.push(week[i].points);\n      }\n    }\n    return mappedUsers;\n  }\n\n  useEffect( async () => {\n    console.log(\"Render\")\n    const {users, rosters} = await getUsersAndRosters(\"735219808769003520\");\n    const matchups = await getMatchups(\"735219808769003520\");\n    setMappedUsers(mapUsers({users, rosters, matchups}));\n\n  }, [])\n  return (\n    <div className=\"App\">\n      <div>\n        <div>Points scored after week</div>\n        <input type=\"text\" value={week} onChange={handleWeekChange}/>\n      </div>\n      {mappedUsers.map((user) => {\n        return <User key={user.userId} user={user} week={week}></User>\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}